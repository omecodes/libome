syntax = "proto3";

package filespb;

import "google/api/annotations.proto";

enum DuplicateAction {
    Fail = 0;
    AutoRename = 1;
    Replace = 2;
}

enum Action {
    NoAction = 0;
    Create = 1;
    Delete = 2;
    Move = 3;
    MoveEdit = 4;
    Rename = 5;
    RenameEdit = 6;
    Edit = 7;
    Read = 8;
    Share = 9;
    UnShare = 10;
    UpdateMeta = 11;
}

enum Type {
    Unknown = 0;
    File = 1;
    Directory = 2;
}

enum Rights {
    AccessDenied = 0;
    AccessRead = 1;
    AccessUpdate = 2;
    AccessDelete = 4;
    AccessShare = 8;
    FullAccess = 15;
}

enum ShareType {
    Restricted = 0;
    PublicLink = 1;
    Internal = 2;
}

message ClusterNode {
    string id = 1;
    string certificate = 2;
    uint64 capacity = 3;
    uint64 usage = 4;
    string service_address = 5;
    string gateway_address = 6;
    bool syncing = 7;
    string access_key = 8;
    string secret = 9;
}

message Stats {
    string id = 1;
    Type type = 2;
    string name = 3;
    string parent = 4;
    int64 size = 5;
    int64 create_time = 6;
    int64 edit_time = 7;
    int64 access_time = 8;
    string hash = 9;
}

message Event {
    int64 seq = 1;
    Action action = 2;
    string path = 3;
    Stats stats = 4;
}

message SyncEvent {
    int64 seq = 1;
    string from = 2;
    string to = 3;
    Event event = 4;
}

message SyncMessage {
    int64 from = 1;
    string dir = 2;
}

message Access {
    string uuid = 1;
    filespb.ShareType type = 2;
    string user = 3;
    string node_path = 4;
    Rights rights = 5;
}

message ListResult {
    repeated Stats list = 1;
    uint32 page_number = 2;
    uint32 page_count = 3;
    uint32 total = 4;
}

message ListOptions {
    int32 offset = 1;
    uint32 count = 2;
}

message EncryptOption {
    bytes key = 1;
    string alg = 2;
    string version = 3;
}

message PutOptions {
    bool create = 1;
    uint64 size = 2;
    string md5 = 3;
    EncryptOption encryption = 4;
}

message MultipartCreateOptions {
    bool override = 1;
    bool rename = 2;
}

message MultipartPutOptions {
    uint64 size = 1;
    string md5 = 2;
    uint32 part_number = 3;
    uint32 total_parts = 4;
    EncryptOption encryption = 5;
}

message ReadOptions {
    bool range = 1;
    uint64 offset = 2;
    int64 length = 3;
    EncryptOption encryption = 4;
}

message CreateOptions {
    bool override = 1;
    bool rename = 2;
}

message ShareOptions {
    int32 max_download = 1;
    int64 expire = 2;
    string password = 3;
}

message CopyOptions {
    DuplicateAction duplicate_action = 3;
}

message MoveOptions {
    DuplicateAction duplicate_action = 3;
}

message Meta {
    string name = 1;
    string value = 2;
}

message ContentPart {
    string id = 1;
    uint32 number = 2;
}

message ListRequest {
    string dir = 1;
    int32 offset = 2;
    uint32 count = 3;
}
message ListResponse {
    repeated Stats list = 1;
    uint32 page = 2;
    uint32 page_count = 3;
}

message CreateRequest {
    string path = 1;
    Type type = 2;
}
message CreateResponse {
}

message StatsRequest {
    string path = 1;
    bool with_hash = 2;
}
message StatsResponse {
    Stats stats = 1;
}

message GetListStreamRequest {
    string dir = 1;
}

message GetMetaRequest {
    string path = 1;
}
message GetMetaResponse {
    repeated Meta meta = 1;
}

message SetMetaRequest {
    string path = 1;
    repeated Meta meta = 2;
}
message SetMetaResponse {}

message CopyRequest {
    repeated string paths = 1;
    string dir = 2;
}
message CopyResponse {}

message MoveRequest {
    repeated string paths = 1;
    string dir = 2;
}
message MoveResponse {
}

message RenameRequest {
    string path = 1;
    string new_name = 2;
}
message RenameResponse {
}

message UploadURLRequest {
    string node_path = 1;
    int64 content_size = 2;
    bool append = 3;
}
message UploadURLResponse {
    string url = 1;
}

message DownloadURLRequest {
    string node_path = 1;
}
message DownloadURLResponse {
    string url = 1;
}

message DeleteRequest {
    string path = 1;
}
message DeleteResponse {
}

message MultipartCreateRequest {
    string node_path = 1;
    MultipartCreateOptions options = 2;
}
message MultipartCreateResponse {
    string id = 1;
    string name = 2;
}

message MultipartPutRequest {
    string id = 1;
}
message MultipartPutResponse {
}

message MultipartFinishRequest {
    string id = 1;
}
message MultipartFinishResponse {
}

service Files {
    rpc Sync(SyncMessage) returns (stream Event);

    rpc List (ListRequest) returns (ListResponse) {
        option(google.api.http).get = "/api/list/{dir=**}";
    };

    rpc GetListStream(GetListStreamRequest) returns (stream Stats);

    rpc Create (CreateRequest) returns (CreateResponse) {
        option(google.api.http).get = "/api/create/{path=**}";
    };

    rpc GetStats (StatsRequest) returns (StatsResponse) {
        option(google.api.http).get = "/api/info/{path=**}";
    };

    rpc StatsSession(stream StatsRequest) returns (stream Stats);

    rpc GetMeta (GetMetaRequest) returns (GetMetaResponse) {
        option(google.api.http).get = "/api/meta/{path=**}";
    };
    rpc SetMeta (SetMetaRequest) returns (SetMetaResponse) {
        option(google.api.http) = {
            post: "/api/meta/{path=**}";
            body: "*";
        };
    };
    rpc DownloadURL (DownloadURLRequest) returns (DownloadURLResponse) {
        option(google.api.http).get = "/api/download_url/{node_path=**}";
    };
    rpc UploadURL (UploadURLRequest) returns (UploadURLResponse) {
        option(google.api.http).get = "/api/upload_url/{node_path=**}";
    };
    rpc Copy (CopyRequest) returns (CopyResponse) {
        option(google.api.http) = {
            post: "/api/copy";
            body: "*";
        };
    };
    rpc Move (MoveRequest) returns (MoveResponse) {
        option(google.api.http) = {
            post: "/api/move";
            body: "*";
        };
    };
    rpc Delete (DeleteRequest) returns (DeleteResponse) {
        option(google.api.http).get = "/api/delete/{path=**}";
    };
}